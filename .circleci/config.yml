version: 2.1

jobs:
  build:
    docker:
      - image: cimg/node:23.3.0
        environment:
          TEST_DATABASE_URL: postgresql://postgres@localhost/circle_test
      - image: cimg/postgres:17.0
        environment:
          POSTGRES_USER: postgres
    steps:
      - checkout # check out the code in the project directory
      - run: echo "hello world" # run the `echo` command
      - run: node --version
      - run:
          name: install dockerize # This is a utility that will attempt to connect to a database, in place of an application for this sample.
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db # If no database is found in 1 minute the job will fail.
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client
      - run: whoami
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "CREATE TABLE test (name char(25));"
      - run: |
          psql \
          -d $TEST_DATABASE_URL \
          -c "INSERT INTO test VALUES ('John'), ('Joanna'), ('Jennifer');"

workflows:
  build-workflow:
    jobs:
      - build